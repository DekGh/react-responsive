{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import {useEffect, useState, ReactNode} from \"react\";\r\n\r\nconst keySwitcher = {\r\n    maxWidth: (maxWidth: number) => `(max-width: ${maxWidth}px)`,\r\n    minWidth: (minWidth: number) => `(min-width: ${minWidth}px)`,\r\n    minResolution: (minResolution: string | number) => typeof minResolution === 'string' ? `(min-resolution: ${minResolution})` : `(min-resolution: ${minResolution}dppx)`,\r\n    maxResolution: (maxResolution: number) => `(min-resolution: ${maxResolution})`,\r\n    minHeight: (minHeight: number) => `(min-height: ${minHeight}px)`,\r\n    maxHeight: (maxHeight: number) => `(max-height: ${maxHeight}px)`,\r\n    orientation: (orientation: number) => `(orientation: ${orientation})`\r\n};\r\n\r\ntype Props = {\r\n    children: ReactNode | Function,\r\n    setting: object\r\n}\r\n\r\nconst MediaQuery = ({children, ...setting}: Props) => {\r\n\r\n    const getKey = Object.keys(setting)[0]\r\n    const getValue = Object.values(setting)[0]\r\n\r\n    const isInfo = keySwitcher[getKey as keyof typeof keySwitcher](getValue);\r\n\r\n    const matches = useMediaQuery({query: isInfo})\r\n\r\n    return typeof children === 'function' ? children(matches) : matches ? children : null\r\n}\r\nexport default MediaQuery\r\n\r\n\r\nexport const useMediaQuery = (media: {query: string}) => {\r\n\r\n    let mql = window.matchMedia(media.query)\r\n\r\n    const [value, setValue] = useState(mql.matches)\r\n\r\n    const screenTest = (e: MediaQueryListEvent): void => {\r\n        if (e.matches) {\r\n            setValue(true)\r\n        }\r\n        else {\r\n            setValue(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        mql.addEventListener('change', screenTest)\r\n        return () => mql.removeEventListener('change', screenTest)\r\n    }, [])\r\n\r\n    return value\r\n}"],"names":["keySwitcher","maxWidth","minWidth","minResolution","maxResolution","minHeight","maxHeight","orientation","useMediaQuery","media","mql","window","matchMedia","query","_useState","useState","matches","value","setValue","screenTest","e","useEffect","addEventListener","removeEventListener","_ref","children","setting","_objectWithoutPropertiesLoose","_excluded","getKey","Object","keys","getValue","values","isInfo"],"mappings":"sCAEiBA,EAAG,CAChBC,SAAU,SAACA,GAAD,MAAA,eAAqCA,EAArC,KAAA,EACVC,SAAU,SAACA,GAAD,MAAA,eAAqCA,EAArC,KAAA,EACVC,cAAe,SAACA,GAAD,MAA6D,iBAAlBA,EAAiDA,oBAAAA,EAAuCA,IAAAA,oBAAAA,EAAnI,OAAA,EACfC,cAAe,SAACA,GAAD,MAAA,oBAA+CA,EAA/C,GAAA,EACfC,UAAW,SAACA,GAAD,MAAA,gBAAuCA,EAAvC,KAAA,EACXC,UAAW,SAACA,GAAsCA,MAAAA,gBAAAA,EANlC,KAAA,EAOhBC,YAAa,SAACA,GAAyCA,MAAAA,iBAAAA,EAPvC,GAAA,GA6BPC,EAAgB,SAACC,GAE1B,IAAOC,EAAGC,OAAOC,WAAWH,EAAMI,OAElCC,EAA0BC,EAAQA,SAACL,EAAIM,SAAhCC,EAAOC,EAAAA,GAAAA,EAEdJ,EAAA,GAAgBK,EAAG,SAACC,GAEZF,IADAE,EAAEJ,QAMT,EAOD,OALAK,EAASA,UAAC,WAEN,OADAX,EAAIY,iBAAiB,SAAUH,GACxB,WAAA,OAAST,EAACa,oBAAoB,SAAUJ,EAAxC,CACV,EAAE,IAEIF,CACV,kBAnCkB,SAAkCO,GAAA,IAAAC,EAAAD,EAAhCC,SAAaC,oIAAmBC,CAAAH,EAAAI,GAE3CC,EAASC,OAAOC,KAAKL,GAAS,GAC9BM,EAAWF,OAAOG,OAAOP,GAAS,GAElCQ,EAASlC,EAAY6B,GAAoCG,KAE/CxB,EAAc,CAACK,MAAOqB,IAEtC,MAA2B,mBAApBT,EAAiCA,EAAST,GAAWA,EAAUS,EAAW,IACpF"}