{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import {useEffect, useState, ReactNode} from \"react\";\r\n\r\ninterface MediaProps {\r\n    maxWidth?: number;\r\n    minWidth?: number;\r\n    minResolution?: `${number}ddpx` | number;\r\n    maxResolution?: `${number}ddpx` | number;\r\n    minHeight?: number;\r\n    maxHeight?: number;\r\n    orientation?: string;\r\n}\r\n\r\ntype Props = {\r\n    children: (data: boolean) => ReactNode | ReactNode;\r\n} & MediaProps\r\n\r\nconst keySwitcher = {\r\n    maxWidth: (maxWidth: number) => `(max-width: ${maxWidth}px)`,\r\n    minWidth: (minWidth: number) => `(min-width: ${minWidth}px)`,\r\n    minResolution: (minResolution: `${number}dppx` | number) => typeof minResolution === `number` ? `(min-resolution: ${minResolution}dppx)` : `(min-resolution: ${minResolution})`,\r\n    maxResolution: (maxResolution: `${number}dppx` | number) => typeof maxResolution === `number` ? `(max-resolution: ${maxResolution}ddpx)` : `(max-resolution: ${maxResolution})`,\r\n    minHeight: (minHeight: number) => `(min-height: ${minHeight}px)`,\r\n    maxHeight: (maxHeight: number) => `(max-height: ${maxHeight}px)`,\r\n    orientation: (orientation: string) => `(orientation: ${orientation})`\r\n} as any\r\n\r\nconst MediaQuery = ({children, ...setting}: Props) => {\r\n\r\n    const getQuery = Object.entries(setting).map(([key, value]) => { return  keySwitcher[key as keyof typeof keySwitcher](value) }).join(\" and \")\r\n\r\n    const matches = useMediaQuery({query: getQuery})\r\n\r\n    return typeof children === 'function' ? children(matches) : matches ? children : null\r\n}\r\nexport default MediaQuery\r\n\r\n\r\nexport const useMediaQuery = (media: {query: string}): boolean => {\r\n\r\n    const [value, setValue] = useState(() => {\r\n        const initialState = window.matchMedia(media.query).matches\r\n        return initialState\r\n    })\r\n\r\n    useEffect(() => {\r\n        const mql = window.matchMedia(media.query)\r\n\r\n        const screenTest = (e: MediaQueryListEvent): void => { setValue(e.matches) }\r\n\r\n        setValue(mql.matches)\r\n\r\n        mql.addEventListener('change', screenTest)\r\n        return () => { mql.removeEventListener('change', screenTest) }\r\n    }, [media.query])\r\n\r\n    return value\r\n}"],"names":["keySwitcher","maxWidth","minWidth","minResolution","maxResolution","minHeight","maxHeight","orientation","MediaQuery","children","setting","getQuery","Object","entries","map","key","value","join","matches","useMediaQuery","query","media","useState","initialState","window","matchMedia","setValue","useEffect","mql","screenTest","e","addEventListener","removeEventListener"],"mappings":"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"}